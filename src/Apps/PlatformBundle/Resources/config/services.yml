# src/Apps/PlatformBundle/Resources/config/services.yml
#services:
#    apps_platform.example:
#        class: Apps\PlatformBundle\Example
#        arguments: ["@service_id", "plain_value", "%parameter%"]

services:
    apps_platform.antispam:
        class: Apps\PlatformBundle\Antispam\AppsAntispam
        arguments:
            - "@mailer"
            - %locale%
            - 50

    apps_platform.email.application_mailer:
        class: Apps\PlatformBundle\Email\ApplicationMailer
        arguments:
            - "@mailer"

    apps_platform.doctrine_listener.application_creation:
      class: Apps\PlatformBundle\DoctrineListener\ApplicationCreationListener
      arguments:
        - "@apps_platform.email.application_mailer"
      tags:
        - { name: doctrine.event_listener, event: postPersist }

    apps_platform.purger.advert:
      class: Apps\PlatformBundle\Purger\AdvertPurger
      arguments:
        - "@doctrine.orm.entity_manager"

    oc_platform.validator.antiflood:                        # Le nom du service
       class: Apps\PlatformBundle\Validator\AntifloodValidator # La classe du service, ici notre validateur déjà créé
       arguments:                                            # Les données qu'on injecte au service : la requête et l'EntityManager
         - "@request_stack"
         - "@doctrine.orm.entity_manager"
       tags:
         - { name: validator.constraint_validator, alias: apps_platform_antiflood }  # C'est avec l'alias qu'on retrouvera le service
